!obj:pylearn2.train.Train {
    dataset: &train !obj:research.code.pylearn2.datasets.timit.TIMIT {
        which_set: 'train',
        frame_length: &fl 1,
        frames_per_example: &fpe 100,
        audio_only: &ao 1,
        proportion: &p 0.05
    },
    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: 2048,
        layers: [
            !obj:pylearn2.models.mlp.Tanh {
                layer_name: 'h1',
                dim: 50,
                sparse_init: 5
            },
            !obj:pylearn2.models.mlp.Linear {
                layer_name: 'h2',
                dim: 1,
                irange: 0.05
            }
        ],
        nvis: *fpe
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: 0.1,
        monitoring_dataset: {
            'train': *train,
            'valid': !obj:research.code.pylearn2.datasets.timit.TIMIT {
                which_set: 'valid',
                frame_length: *fl,
                frames_per_example: *fpe,
                audio_only: *ao,
                proportion: *p
            },
            'test': !obj:research.code.pylearn2.datasets.timit.TIMIT {
                which_set: 'test',
                frame_length: *fl,
                frames_per_example: *fpe,
                audio_only: *ao,
                proportion: *p
            }
        },
        cost: !obj:pylearn2.costs.cost.SumOfCosts {
            costs: [
                !obj:pylearn2.costs.mlp.Default {},
                !obj:pylearn2.costs.mlp.WeightDecay {
                    coeffs: [0.0, 0.0]
                }
            ]
        
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: 'valid_objective',
            prop_decrease: 0.005,
            N: 5
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
            channel_name: 'valid_objective',
            save_path: '/data/lisa/exp/raymonjp/speech_synthesis/mlp150.pkl'
        },
        !obj:pylearn2.training_algorithms.sgd.MonitorBasedLRAdjuster {
            dataset_name: 'valid'
        }
    ]
}
